---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { photoManifestSchema, type PhotoManifestItem } from '../../../utils/photoManifestSchema';

const manifestUrl = 'https://share.kadykov.com/image_manifest.json';
let uniqueDates: string[] = []; // Stores dates as YYYY-MM-DD strings

try {
  const response = await fetch(manifestUrl);
  if (!response.ok) {
    throw new Error(`Failed to fetch manifest: ${response.statusText}`);
  }
  const jsonData = await response.json();
  const parsed = photoManifestSchema.safeParse(jsonData);
  if (!parsed.success) {
    console.error('Failed to parse photo manifest for dates index page:', parsed.error.flatten());
    throw new Error('Failed to parse photo manifest for dates index page: ' + parsed.error.toString());
  }
  const allPhotos = parsed.data;

  const dateSet = new Set<string>();
  allPhotos.forEach(photo => {
    let dateStr: string | null = null;
    if (photo.dateTaken) {
      dateStr = photo.dateTaken.substring(0, 10); // YYYY-MM-DD from ISO string
    } else if (photo.year && photo.month && photo.day) {
      // Pad month and day with leading zeros if necessary
      const monthStr = String(photo.month).padStart(2, '0');
      const dayStr = String(photo.day).padStart(2, '0');
      dateStr = `${photo.year}-${monthStr}-${dayStr}`;
    }
    if (dateStr) {
      dateSet.add(dateStr);
    }
  });
  uniqueDates = Array.from(dateSet).sort((a, b) => b.localeCompare(a)); // Sort YYYY-MM-DD strings, recent first

} catch (e) {
  const error = e as Error;
  console.error(`Error processing photo dates: ${error.message}`);
  throw error; // Fail fast
}

const pageTitle = "Photo dates";
const pageDescription = "Browse photos by date taken.";
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <div class="container mx-auto px-4 py-8">
    <h1 class="text-heading-1 mb-8 text-center">{pageTitle}</h1>

    {uniqueDates.length > 0 ? (
      <ul class="flex flex-wrap justify-center gap-4">
        {uniqueDates.map(date => (
          <li>
            <a href={`/photos/dates/${date}/1`} class="btn btn-ghost text-body-standard-serif">
              {date}
            </a>
          </li>
        ))}
      </ul>
    ) : (
      <p class="text-center">No photo dates found.</p>
    )}
  </div>
</BaseLayout>
