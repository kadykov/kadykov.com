---
import OptimizedImage from "./OptimizedImage.astro"

const { post } = Astro.props
const { title, description, pubDate, image, tags } = post.data
const postUrl = `/blog/${post.slug}`

// Fallback image if not provided in frontmatter
const placeholderImage =
  "https://img.daisyui.com/images/stock/photo-1606107557195-0e29a4b5b4aa.webp"
const displayImage = image?.url || placeholderImage
const imageAlt = image?.alt || title

// Options for date formatting, adjust as needed
const dateOptions: Intl.DateTimeFormatOptions = {
  year: "numeric",
  month: "long",
  day: "numeric",
}
---

<div class="card bg-base-100 shadow-xl h-full flex flex-col">
  {
    image &&
      image.url && ( // Ensure image.url exists
        <figure class="aspect-video">
          <a
            href={postUrl}
            aria-label={`Read more about ${title}`}
            class="block w-full h-full"
          >
            {" "}
            {/* Make link block and full size */}
            <OptimizedImage
              src={displayImage}
              alt={imageAlt}
              class="block w-full"
              imgClass="w-full h-full object-cover"
              displayWidth={700}
              sizesAttr="(min-width: 1200px) 350px, (min-width: 900px) 400px, (min-width: 680px) 600px, 90vw"
              loading="lazy"
            />
          </a>
        </figure>
      )
  }
  <div class="card-body flex-grow flex flex-col p-6">
    {/* Added padding to card-body */}
    <h3 class="card-title">
      <a href={postUrl} class="hover:underline">{title}</a>
    </h3>
    {
      pubDate && (
        <p class="text-meta mb-3">
          {" "}
          {/* Used text-meta and margin */}
          <time datetime={pubDate.toISOString()}>
            {pubDate.toLocaleDateString(undefined, dateOptions)}
          </time>
        </p>
      )
    }
    {description && <p class="mb-4 flex-grow">{description}</p>}
    <div class="card-actions justify-end mt-auto">
      {
        tags &&
          tags.length > 0 &&
          tags.map(
            (
              tag: string // Added type for tag
            ) => (
              <a
                href={`/tags/${tag}`}
                class="badge badge-outline text-meta hover:bg-secondary hover:text-secondary-content hover:border-secondary"
              >
                {" "}
                {/* Used text-meta for badge text */}
                {tag}
              </a>
            )
          )
      }
    </div>
  </div>
</div>
